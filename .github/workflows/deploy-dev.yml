name: Deploy (Development)

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'apps/**'
      - 'packages/**'

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  test:
    uses: ./.github/workflows/test.yml

  run-migrations:
    uses: ./.github/workflows/run-migrations.yml
    with:
      environment: Development
    secrets: inherit

  deploy-api:
    needs: [run-migrations, test]
    runs-on: ubuntu-latest
    environment: Development
    concurrency:
      group: api-dev-${{ github.ref }}
    
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.17
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: bun install

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy API
        working-directory: ./apps/api
        run: bun deploy:api:dev
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SG_CARS_TRENDS_API_TOKEN: ${{ secrets.SG_CARS_TRENDS_API_TOKEN }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          FEATURE_FLAG_RATE_LIMIT: ${{ vars.FEATURE_FLAG_RATE_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DISCORD_WORKFLOW_WEBHOOK_URL: ${{ secrets.DISCORD_WORKFLOW_WEBHOOK_URL }}
          LINKEDIN_CLIENT_ID: ${{ secrets.LINKEDIN_CLIENT_ID }}
          LINKEDIN_CLIENT_SECRET: ${{ secrets.LINKEDIN_CLIENT_SECRET }}
          LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
          LINKEDIN_REFRESH_TOKEN: ${{ secrets.LINKEDIN_REFRESH_TOKEN }}
          LINKEDIN_ORGANISATION_ID: ${{ secrets.LINKEDIN_ORGANISATION_ID }}
          LINKEDIN_USER_ID: ${{ secrets.LINKEDIN_USER_ID }}
          LTA_DATAMALL_API_KEY: ${{ secrets.LTA_DATAMALL_API_KEY }}
          QSTASH_CURRENT_SIGNING_KEY: ${{ secrets.QSTASH_CURRENT_SIGNING_KEY }}
          QSTASH_NEXT_SIGNING_KEY: ${{ secrets.QSTASH_NEXT_SIGNING_KEY }}
          QSTASH_TOKEN: ${{ secrets.QSTASH_TOKEN }}
          QSTASH_URL: ${{ secrets.QSTASH_URL }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          TWITTER_APP_KEY: ${{ secrets.TWITTER_APP_KEY }}
          TWITTER_APP_SECRET: ${{ secrets.TWITTER_APP_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
          UPDATER_API_TOKEN: ${{ secrets.UPDATER_API_TOKEN }}
          UPSTASH_API_KEY: ${{ secrets.UPSTASH_API_KEY }}
          UPSTASH_EMAIL: ${{ secrets.UPSTASH_EMAIL }}

  deploy-web:
    needs: [deploy-api]
    runs-on: ubuntu-latest
    environment: Development
    concurrency:
      group: web-dev-${{ github.ref }}

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.17

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: bun install

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: actions/cache@v4
        with:
          path: apps/web/.next/cache
          key: ${{ runner.os }}-nextjs-dev-${{ hashFiles('apps/web/**.[jt]s', 'apps/web/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-dev-

      - name: Deploy Web
        working-directory: ./apps/web
        run: bun deploy:web:dev
        env:
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_FEATURE_FLAG_UNRELEASED: ${{ vars.NEXT_PUBLIC_FEATURE_FLAG_UNRELEASED }}
          NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ vars.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
          NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL }}
          NEXT_PUBLIC_REVALIDATE_TOKEN: ${{ secrets.NEXT_PUBLIC_REVALIDATE_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SG_CARS_TRENDS_API_TOKEN: ${{ secrets.SG_CARS_TRENDS_API_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}